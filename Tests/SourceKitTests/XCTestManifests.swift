#if !canImport(ObjectiveC)
import XCTest

extension CodeActionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CodeActionTests = [
        ("testCodeActionResponseLegacySupport", testCodeActionResponseLegacySupport),
        ("testCodeActionResponseRespectsSupportedKinds", testCodeActionResponseRespectsSupportedKinds),
    ]
}

extension DocumentSymbolTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DocumentSymbolTest = [
        ("testAll", testAll),
        ("testEmpty", testEmpty),
        ("testEnum", testEnum),
        ("testStruct", testStruct),
        ("testUnicode", testUnicode),
    ]
}

extension ExecuteCommandTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ExecuteCommandTests = [
        ("testSemanticRefactoring", testSemanticRefactoring),
    ]
}

extension FoldingRangeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FoldingRangeTests = [
        ("testEmptyText", testEmptyText),
        ("testLineFoldingOnly", testLineFoldingOnly),
        ("testPartialLineFolding", testPartialLineFolding),
        ("testRangeLimit", testRangeLimit),
    ]
}

extension LocalClangTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LocalClangTests = [
        ("testFoldingRange", testFoldingRange),
        ("testSymbolInfo", testSymbolInfo),
    ]
}

extension LocalSwiftTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LocalSwiftTests = [
        ("testCompletion", testCompletion),
        ("testCompletionPosition", testCompletionPosition),
        ("testDocumentSymbolHighlight", testDocumentSymbolHighlight),
        ("testEditing", testEditing),
        ("testHover", testHover),
        ("testSymbolInfo", testSymbolInfo),
        ("testXMLToMarkdownComment", testXMLToMarkdownComment),
        ("testXMLToMarkdownDeclaration", testXMLToMarkdownDeclaration),
    ]
}

extension SKTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SKTests = [
        ("testInitJSON", testInitJSON),
        ("testInitLocal", testInitLocal),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(CodeActionTests.__allTests__CodeActionTests),
        testCase(DocumentSymbolTest.__allTests__DocumentSymbolTest),
        testCase(ExecuteCommandTests.__allTests__ExecuteCommandTests),
        testCase(FoldingRangeTests.__allTests__FoldingRangeTests),
        testCase(LocalClangTests.__allTests__LocalClangTests),
        testCase(LocalSwiftTests.__allTests__LocalSwiftTests),
        testCase(SKTests.__allTests__SKTests),
    ]
}
#endif
